version: "3.7"
services:
#Application 
  app:
    build:
      args:
        user: ubuntu
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: ngo
    container_name: ngo-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      # - ./docker-compose/php:/usr/local/etc/php/
    networks:
      - ngo
 #Database
  db:
    image: mysql:5.7
    platform: linux/x86_64
    container_name: ngo-db
    restart: unless-stopped
    ports:
        - 3306:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - ngo
  #phpmyadmin
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin:latest
    restart: unless-stopped
    ports:
      - '8081:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - ngo
#Web server
  nginx:
    image: nginx:alpine
    container_name: ngo-nginx
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - ngo

networks:
  ngo:
    driver: bridge
